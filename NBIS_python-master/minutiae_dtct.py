import os
import argparse

from PIL import Image
'''
This Python generates the .xyt files from the given .jpeg or .wsq image,
in addition to the .xyt files, the mindtct, program of NBIS also generates
other formats, which can be removed using a seperate Pyhton file named
'delete_files.py'. Provide the path of the directory containing the images
and path of the directory to store the files generated by the mindtct program.
Make sure that mindtct in available on your path for this code to work
correctly, if your don't want to add mindtct to yout path, change it here.
'''
# Change this according to path in your system,
# Do not change if mindtctc is added to the path

mindtct_path = "/home/gloria/NBIS_python-master/mindtct"

os_path_join = os.path.join


def bmpToJpg(file_path):
    output_jpgdir = file_path+'_jpgout'
    if not os.path.exists(output_jpgdir):
        os.makedirs(output_jpgdir)
    for fileName in os.listdir(file_path):
        print(fileName)
        if(fileName.split(".")[-1]=="bmp"):
            newFileName = fileName[0:fileName.find(".bmp")]+".jpg"
        elif(fileName.split(".")[-1]==".tif"):
            newFileName = fileName[0:fileName.find(".tif")] + ".jpg"
        print(newFileName)
        im = Image.open(file_path+"/"+fileName)
        im.save(output_jpgdir+"/"+newFileName)
    return output_jpgdir

def run_mindtct(source_path, save_path):
    new_source_path=bmpToJpg(source_path)
    if not os.path.exists(save_path):
        os.makedirs(save_path)
    for image in os.listdir(new_source_path):
        image_name = image.split('.')[0]
        print(os_path_join(new_source_path, image))
        print(os_path_join(save_path, image_name))
        os.system(
            " ".join([mindtct_path, os_path_join(new_source_path, image), os_path_join(save_path, image_name)]))


if __name__ == "__main__":
    # code for cli arguments
    parser = argparse.ArgumentParser(description='desc')
    parser.add_argument(
        '-p', '--path', help='Required. Path to the source directory', required=True)
    parser.add_argument(
        '-s', '--save', help='Required. Path to the destination directory', required=True)
    args = vars(parser.parse_args())
    run_mindtct(args['path'], args['save'])
